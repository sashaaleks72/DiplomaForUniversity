// <auto-generated />
using System;
<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
========
using Data;
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
    [Migration("20230601170939_InitialCreate")]
    partial class InitialCreate
========
    [Migration("20230602082710_Initial")]
    partial class Initial
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            SqlServerModelBuilderExtensions.UseHiLo(modelBuilder, "EntityFrameworkHiLoSequence");

            modelBuilder.HasSequence("EntityFrameworkHiLoSequence")
                .IncrementsBy(10);

            modelBuilder.Entity("Data.Data.Entities.CompanyEntity", b =>
========
            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Entities.CompanyEntity", b =>
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"));
========
                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs

                    b.Property<string>("CountryOfRegistration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.OrderEntity", b =>
========
            modelBuilder.Entity("Data.Entities.OrderEntity", b =>
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"));
========
                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalSum")
                        .HasColumnType("float");

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");
========
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.OrderProductEntity", b =>
========
            modelBuilder.Entity("Data.Entities.OrderProductEntity", b =>
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"));
========
                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("TeapotId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("TeapotId");

                    b.ToTable("OrderItems");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.OrderStatusEntity", b =>
========
            modelBuilder.Entity("Data.Entities.OrderStatusEntity", b =>
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"));
========
                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.RoleEntity", b =>
========
            modelBuilder.Entity("Data.Entities.RoleEntity", b =>
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"));
========
                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.TeapotEntity", b =>
                {
                    b.Property<string>("Id")
========
            modelBuilder.Entity("Data.Entities.TeapotEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BodyMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Functions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<int>("WarrantyInMonths")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Teapots");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");
========
            modelBuilder.Entity("Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserEntity");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.OrderEntity", b =>
                {
                    b.HasOne("Data.Data.Entities.OrderStatusEntity", "OrderStatus")
========
            modelBuilder.Entity("Data.Entities.OrderEntity", b =>
                {
                    b.HasOne("Data.Entities.OrderStatusEntity", "OrderStatus")
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
                    b.HasOne("Data.Data.Entities.UserEntity", "User")
========
                    b.HasOne("Data.Entities.UserEntity", "User")
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderStatus");

                    b.Navigation("User");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.OrderProductEntity", b =>
                {
                    b.HasOne("Data.Data.Entities.OrderEntity", "Order")
                        .WithMany()
========
            modelBuilder.Entity("Data.Entities.OrderProductEntity", b =>
                {
                    b.HasOne("Data.Entities.OrderEntity", "Order")
                        .WithMany("OrderProducts")
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
                    b.HasOne("Data.Data.Entities.TeapotEntity", "Teapot")
========
                    b.HasOne("Data.Entities.TeapotEntity", "Teapot")
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                        .WithMany()
                        .HasForeignKey("TeapotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Teapot");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.TeapotEntity", b =>
                {
                    b.HasOne("Data.Data.Entities.CompanyEntity", "Company")
========
            modelBuilder.Entity("Data.Entities.TeapotEntity", b =>
                {
                    b.HasOne("Data.Entities.CompanyEntity", "Company")
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

<<<<<<<< HEAD:Data/Data/Migrations/20230601170939_InitialCreate.Designer.cs
            modelBuilder.Entity("Data.Data.Entities.UserEntity", b =>
                {
                    b.HasOne("Data.Data.Entities.RoleEntity", "Role")
========
            modelBuilder.Entity("Data.Entities.UserEntity", b =>
                {
                    b.HasOne("Data.Entities.RoleEntity", "Role")
>>>>>>>> main:Data/Data/Migrations/20230602082710_Initial.Designer.cs
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Data.Entities.OrderEntity", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
